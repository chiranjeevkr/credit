{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kchir\\\\Desktop\\\\creadit\\\\src\\\\pages\\\\SplitFriends.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabase';\nimport { Plus, ArrowUp, ArrowDown, Clock, Edit2, Trash2, X, Trash } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SplitFriends = () => {\n  _s();\n  const [friends, setFriends] = useState([]);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [selectedFriend, setSelectedFriend] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [formData, setFormData] = useState({\n    friendName: '',\n    friendNumber: '',\n    amount: '',\n    type: 'credit',\n    note: ''\n  });\n  const [editingTransaction, setEditingTransaction] = useState(null);\n  const [showPopup, setShowPopup] = useState(null);\n  const [showFriendPopup, setShowFriendPopup] = useState(null);\n  const [editingFriend, setEditingFriend] = useState(null);\n  const [showDeleteForm, setShowDeleteForm] = useState(null);\n  const [deleteFormData, setDeleteFormData] = useState({\n    uniqueNumber: '',\n    captchaInput: ''\n  });\n  const [deleteCaptcha, setDeleteCaptcha] = useState('');\n  const [deleteCaptchaAnswer, setDeleteCaptchaAnswer] = useState(0);\n  const [totalSummary, setTotalSummary] = useState({\n    totalGiven: 0,\n    totalTaken: 0\n  });\n  useEffect(() => {\n    fetchFriends();\n  }, []);\n  useEffect(() => {\n    calculateTotalSummary();\n  }, [friends]);\n  useEffect(() => {\n    if (selectedFriend) {\n      fetchTransactions(selectedFriend.id);\n    }\n  }, [selectedFriend]);\n  const fetchFriends = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('friends').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setFriends(data || []);\n    } catch (error) {\n      console.error('Error fetching friends:', error);\n    }\n  };\n  const fetchTransactions = async friendId => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('transactions').select('*').eq('friend_id', friendId).neq('status', 'deleted').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setTransactions(data || []);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n  const handleAddFriend = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (editingFriend) {\n        return handleUpdateFriend(e);\n      }\n      const {\n        error\n      } = await supabase.from('friends').insert([{\n        user_id: user.id,\n        friend_name: formData.friendName,\n        friend_number: formData.friendNumber,\n        balance: 0\n      }]);\n      if (error) throw error;\n      setFormData({\n        friendName: '',\n        friendNumber: '',\n        amount: '',\n        type: 'credit',\n        note: ''\n      });\n      setEditingFriend(null);\n      setShowAddForm(false);\n      fetchFriends();\n    } catch (error) {\n      console.error('Error adding friend:', error);\n      alert(`Error: ${error.message}`);\n    }\n  };\n  const handleTransaction = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      const amount = parseFloat(formData.amount);\n\n      // Calculate new balance\n      const balanceChange = formData.type === 'credit' ? amount : -amount;\n      const newBalance = selectedFriend.balance + balanceChange;\n      if (editingTransaction) {\n        return handleUpdateTransaction(e);\n      }\n\n      // Add transaction with balance at time\n      const {\n        error: transError\n      } = await supabase.from('transactions').insert([{\n        user_id: user.id,\n        friend_id: selectedFriend.id,\n        amount: amount,\n        type: formData.type,\n        note: formData.note,\n        balance_at_time: newBalance,\n        status: 'active'\n      }]);\n      if (transError) throw transError;\n\n      // Update friend balance\n      const {\n        error: updateError\n      } = await supabase.from('friends').update({\n        balance: newBalance\n      }).eq('id', selectedFriend.id);\n      if (updateError) throw updateError;\n      setFormData({\n        ...formData,\n        amount: '',\n        note: ''\n      });\n      setEditingTransaction(null);\n      fetchFriends();\n      fetchTransactions(selectedFriend.id);\n\n      // Update selected friend balance\n      setSelectedFriend({\n        ...selectedFriend,\n        balance: newBalance\n      });\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n      alert(`Error: ${error.message}`);\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  const handleEditTransaction = transaction => {\n    setEditingTransaction(transaction);\n    setFormData({\n      ...formData,\n      amount: transaction.amount.toString(),\n      type: transaction.type,\n      note: transaction.note || ''\n    });\n  };\n  const handleUpdateTransaction = async e => {\n    e.preventDefault();\n    try {\n      const amount = parseFloat(formData.amount);\n      const oldAmount = parseFloat(editingTransaction.amount);\n      const oldType = editingTransaction.type;\n\n      // Calculate balance adjustment\n      const oldChange = oldType === 'credit' ? oldAmount : -oldAmount;\n      const newChange = formData.type === 'credit' ? amount : -amount;\n      const balanceAdjustment = newChange - oldChange;\n      const newBalance = selectedFriend.balance + balanceAdjustment;\n\n      // Update transaction with edited status\n      const {\n        error: updateError\n      } = await supabase.from('transactions').update({\n        amount: amount,\n        type: formData.type,\n        note: formData.note,\n        status: 'edited',\n        balance_at_time: newBalance\n      }).eq('id', editingTransaction.id);\n      if (updateError) throw updateError;\n\n      // Update friend balance\n      const {\n        error: friendError\n      } = await supabase.from('friends').update({\n        balance: newBalance\n      }).eq('id', selectedFriend.id);\n      if (friendError) throw friendError;\n      setFormData({\n        ...formData,\n        amount: '',\n        note: ''\n      });\n      setEditingTransaction(null);\n      fetchFriends();\n      fetchTransactions(selectedFriend.id);\n      setSelectedFriend({\n        ...selectedFriend,\n        balance: newBalance\n      });\n    } catch (error) {\n      console.error('Error updating transaction:', error);\n      alert(`Error: ${error.message}`);\n    }\n  };\n  const handleDeleteTransaction = async transaction => {\n    if (window.confirm('Are you sure you want to delete this transaction?')) {\n      try {\n        // Calculate balance adjustment\n        const oldChange = transaction.type === 'credit' ? parseFloat(transaction.amount) : -parseFloat(transaction.amount);\n        const newBalance = selectedFriend.balance - oldChange;\n\n        // Mark transaction as deleted\n        const {\n          error: updateError\n        } = await supabase.from('transactions').update({\n          status: 'deleted',\n          balance_at_time: newBalance\n        }).eq('id', transaction.id);\n        if (updateError) throw updateError;\n\n        // Update friend balance\n        const {\n          error: friendError\n        } = await supabase.from('friends').update({\n          balance: newBalance\n        }).eq('id', selectedFriend.id);\n        if (friendError) throw friendError;\n        fetchFriends();\n        fetchTransactions(selectedFriend.id);\n        setSelectedFriend({\n          ...selectedFriend,\n          balance: newBalance\n        });\n      } catch (error) {\n        console.error('Error deleting transaction:', error);\n        alert(`Error: ${error.message}`);\n      }\n    }\n  };\n  const handleTransactionClick = transaction => {\n    setShowPopup(transaction.id);\n  };\n  const handleFriendClick = (friend, e) => {\n    e.stopPropagation();\n    setShowFriendPopup(friend.id);\n  };\n  const closePopup = () => {\n    setShowPopup(null);\n    setShowFriendPopup(null);\n  };\n  const handleEditFriend = friend => {\n    setEditingFriend(friend);\n    setFormData({\n      ...formData,\n      friendName: friend.friend_name,\n      friendNumber: friend.friend_number\n    });\n    setShowFriendPopup(null);\n  };\n  const handleUpdateFriend = async e => {\n    e.preventDefault();\n    try {\n      const {\n        error\n      } = await supabase.from('friends').update({\n        friend_name: formData.friendName\n      }).eq('id', editingFriend.id);\n      if (error) throw error;\n      setFormData({\n        friendName: '',\n        friendNumber: '',\n        amount: '',\n        type: 'credit',\n        note: ''\n      });\n      setEditingFriend(null);\n      setShowAddForm(false);\n      fetchFriends();\n    } catch (error) {\n      console.error('Error updating friend:', error);\n      alert(`Error: ${error.message}`);\n    }\n  };\n  const generateDeleteCaptcha = () => {\n    const num1 = Math.floor(Math.random() * 10) + 1;\n    const num2 = Math.floor(Math.random() * 10) + 1;\n    const result = num1 + num2;\n    setDeleteCaptcha(`${num1} + ${num2} = ?`);\n    setDeleteCaptchaAnswer(result);\n    return result;\n  };\n  const handleDeleteFriend = friend => {\n    setShowDeleteForm(friend);\n    setShowFriendPopup(null);\n    generateDeleteCaptcha();\n    setDeleteFormData({\n      uniqueNumber: '',\n      captchaInput: ''\n    });\n  };\n  const handleDeleteFormSubmit = async e => {\n    e.preventDefault();\n    const friend = showDeleteForm;\n    if (deleteFormData.uniqueNumber !== friend.friend_number) {\n      alert('Incorrect unique number');\n      return;\n    }\n    if (parseInt(deleteFormData.captchaInput) !== deleteCaptchaAnswer) {\n      alert('Incorrect captcha');\n      generateDeleteCaptcha();\n      setDeleteFormData({\n        ...deleteFormData,\n        captchaInput: ''\n      });\n      return;\n    }\n    if (window.confirm(`Are you sure you want to delete ${friend.friend_name} and all related transactions?`)) {\n      try {\n        const {\n          error\n        } = await supabase.from('friends').delete().eq('id', friend.id);\n        if (error) throw error;\n        fetchFriends();\n        if ((selectedFriend === null || selectedFriend === void 0 ? void 0 : selectedFriend.id) === friend.id) {\n          setSelectedFriend(null);\n        }\n        setShowDeleteForm(null);\n        alert('Friend and all transactions deleted successfully');\n      } catch (error) {\n        console.error('Error deleting friend:', error);\n        alert(`Error: ${error.message}`);\n      }\n    }\n  };\n  const refreshDeleteCaptcha = () => {\n    generateDeleteCaptcha();\n    setDeleteFormData({\n      ...deleteFormData,\n      captchaInput: ''\n    });\n  };\n  const handleClearChat = async () => {\n    if (window.confirm(`Are you sure you want to clear all transactions with ${selectedFriend.friend_name}? This will reset the balance to ₹0.`)) {\n      try {\n        // Delete all transactions for this friend\n        const {\n          error: deleteError\n        } = await supabase.from('transactions').delete().eq('friend_id', selectedFriend.id);\n        if (deleteError) throw deleteError;\n\n        // Reset friend balance to 0\n        const {\n          error: updateError\n        } = await supabase.from('friends').update({\n          balance: 0\n        }).eq('id', selectedFriend.id);\n        if (updateError) throw updateError;\n\n        // Refresh data\n        fetchFriends();\n        fetchTransactions(selectedFriend.id);\n        setSelectedFriend({\n          ...selectedFriend,\n          balance: 0\n        });\n        alert('All transactions cleared successfully!');\n      } catch (error) {\n        console.error('Error clearing transactions:', error);\n        alert(`Error: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-friends\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friends-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Split Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        onClick: () => setShowAddForm(true),\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), \"Add Friend\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: editingFriend ? 'Edit Friend' : 'Add New Friend'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddFriend,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Friend Name\",\n          value: formData.friendName,\n          onChange: e => setFormData({\n            ...formData,\n            friendName: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Unique Number\",\n          value: formData.friendNumber,\n          onChange: e => setFormData({\n            ...formData,\n            friendNumber: e.target.value\n          }),\n          disabled: editingFriend,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: editingFriend ? 'Update Friend' : 'Add Friend'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setShowAddForm(false);\n              setEditingFriend(null);\n              setFormData({\n                friendName: '',\n                friendNumber: '',\n                amount: '',\n                type: 'credit',\n                note: ''\n              });\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friends-list\",\n      children: friends.map(friend => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `friend-card ${(selectedFriend === null || selectedFriend === void 0 ? void 0 : selectedFriend.id) === friend.id ? 'selected' : ''}`,\n        onClick: () => setSelectedFriend(friend),\n        onContextMenu: e => handleFriendClick(friend, e),\n        onDoubleClick: e => handleFriendClick(friend, e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friend-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: friend.friend_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"#\", friend.friend_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `friend-balance ${friend.balance >= 0 ? 'positive' : 'negative'}`,\n          children: [\"\\u20B9\", Math.abs(friend.balance).toFixed(2), friend.balance >= 0 ? ' (To take)' : ' (To give)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this)]\n      }, friend.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), selectedFriend && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Transactions with \", selectedFriend.friend_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-chat-btn\",\n          onClick: () => handleClearChat(),\n          title: \"Clear all transactions\",\n          children: [/*#__PURE__*/_jsxDEV(Trash, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this), \"Clear Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleTransaction,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-type\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"debit\",\n                checked: formData.type === 'debit',\n                onChange: e => setFormData({\n                  ...formData,\n                  type: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), \"Taken (Friend paid for you)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"credit\",\n                checked: formData.type === 'credit',\n                onChange: e => setFormData({\n                  ...formData,\n                  type: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this), \"Given (You paid for friend)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            placeholder: \"Amount (\\u20B9)\",\n            value: formData.amount,\n            onChange: e => setFormData({\n              ...formData,\n              amount: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Note (optional)\",\n            value: formData.note,\n            onChange: e => setFormData({\n              ...formData,\n              note: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: editingTransaction ? 'Update Transaction' : 'Add Transaction'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this), editingTransaction && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setEditingTransaction(null);\n              setFormData({\n                ...formData,\n                amount: '',\n                note: ''\n              });\n            },\n            children: \"Cancel Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transactions-list\",\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-row\",\n          children: transaction.type === 'debit' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction-item taken-item\",\n              onClick: () => handleTransactionClick(transaction),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-amount\",\n                children: [/*#__PURE__*/_jsxDEV(ArrowDown, {\n                  className: \"taken-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 25\n                }, this), \"\\u20B9\", transaction.amount.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"transaction-note\",\n                  children: transaction.note || 'No note'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"transaction-time\",\n                  children: [/*#__PURE__*/_jsxDEV(Clock, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 27\n                  }, this), formatDate(transaction.created_at)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-total\",\n                children: [\"\\u20B9\", Math.abs(transaction.balance_at_time || 0).toFixed(2), \" \", (transaction.balance_at_time || 0) >= 0 ? '(To take)' : '(To give)']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 23\n              }, this), transaction.status !== 'active' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-status\",\n                children: transaction.status === 'edited' ? 'Edited' : 'Deleted'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction-spacer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction-empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction-empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction-spacer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction-item given-item\",\n              onClick: () => handleTransactionClick(transaction),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-amount\",\n                children: [/*#__PURE__*/_jsxDEV(ArrowUp, {\n                  className: \"given-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 25\n                }, this), \"\\u20B9\", transaction.amount.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"transaction-note\",\n                  children: transaction.note || 'No note'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"transaction-time\",\n                  children: [/*#__PURE__*/_jsxDEV(Clock, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 27\n                  }, this), formatDate(transaction.created_at)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-total\",\n                children: [\"\\u20B9\", Math.abs(transaction.balance_at_time || 0).toFixed(2), \" \", (transaction.balance_at_time || 0) >= 0 ? '(To take)' : '(To give)']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 23\n              }, this), transaction.status !== 'active' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-status\",\n                children: transaction.status === 'edited' ? 'Edited' : 'Deleted'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-overlay\",\n        onClick: closePopup,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-menu\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Transaction Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"popup-close\",\n              onClick: closePopup,\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"popup-edit\",\n              onClick: () => {\n                const transaction = transactions.find(t => t.id === showPopup);\n                handleEditTransaction(transaction);\n                closePopup();\n              },\n              children: [/*#__PURE__*/_jsxDEV(Edit2, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 21\n              }, this), \"Edit Transaction\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"popup-delete\",\n              onClick: () => {\n                const transaction = transactions.find(t => t.id === showPopup);\n                handleDeleteTransaction(transaction);\n                closePopup();\n              },\n              children: [/*#__PURE__*/_jsxDEV(Trash2, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 21\n              }, this), \"Delete Transaction\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 13\n      }, this), showFriendPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-overlay\",\n        onClick: closePopup,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-menu\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Friend Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"popup-close\",\n              onClick: closePopup,\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"popup-edit\",\n              onClick: () => {\n                const friend = friends.find(f => f.id === showFriendPopup);\n                handleEditFriend(friend);\n                setShowAddForm(true);\n              },\n              children: [/*#__PURE__*/_jsxDEV(Edit2, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 21\n              }, this), \"Edit Friend\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"popup-delete\",\n              onClick: () => {\n                const friend = friends.find(f => f.id === showFriendPopup);\n                handleDeleteFriend(friend);\n              },\n              children: [/*#__PURE__*/_jsxDEV(Trash2, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 21\n              }, this), \"Delete Friend\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 13\n      }, this), showDeleteForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-overlay\",\n        onClick: () => setShowDeleteForm(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-form\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Delete Friend: \", showDeleteForm.friend_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"popup-close\",\n              onClick: () => setShowDeleteForm(null),\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleDeleteFormSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"delete-warning\",\n              children: \"\\u26A0\\uFE0F This will permanently delete the friend and ALL transactions!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter friend's unique number\",\n              value: deleteFormData.uniqueNumber,\n              onChange: e => setDeleteFormData({\n                ...deleteFormData,\n                uniqueNumber: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"captcha-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"captcha-display\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: deleteCaptcha\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: refreshDeleteCaptcha,\n                  className: \"refresh-btn\",\n                  children: \"\\u21BB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                placeholder: \"Enter answer\",\n                value: deleteFormData.captchaInput,\n                onChange: e => setDeleteFormData({\n                  ...deleteFormData,\n                  captchaInput: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"delete-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"delete-confirm-btn\",\n                children: \"Delete Friend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setShowDeleteForm(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitFriends, \"fWyj/U87wKJswxEvxhNRYTgRZVI=\");\n_c = SplitFriends;\nexport default SplitFriends;\nvar _c;\n$RefreshReg$(_c, \"SplitFriends\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Plus","ArrowUp","ArrowDown","Clock","Edit2","Trash2","X","Trash","jsxDEV","_jsxDEV","Fragment","_Fragment","SplitFriends","_s","friends","setFriends","showAddForm","setShowAddForm","selectedFriend","setSelectedFriend","transactions","setTransactions","formData","setFormData","friendName","friendNumber","amount","type","note","editingTransaction","setEditingTransaction","showPopup","setShowPopup","showFriendPopup","setShowFriendPopup","editingFriend","setEditingFriend","showDeleteForm","setShowDeleteForm","deleteFormData","setDeleteFormData","uniqueNumber","captchaInput","deleteCaptcha","setDeleteCaptcha","deleteCaptchaAnswer","setDeleteCaptchaAnswer","totalSummary","setTotalSummary","totalGiven","totalTaken","fetchFriends","calculateTotalSummary","fetchTransactions","id","data","error","from","select","order","ascending","console","friendId","eq","neq","handleAddFriend","e","preventDefault","user","auth","getUser","handleUpdateFriend","insert","user_id","friend_name","friend_number","balance","alert","message","handleTransaction","parseFloat","balanceChange","newBalance","handleUpdateTransaction","transError","friend_id","balance_at_time","status","updateError","update","formatDate","dateString","Date","toLocaleString","handleEditTransaction","transaction","toString","oldAmount","oldType","oldChange","newChange","balanceAdjustment","friendError","handleDeleteTransaction","window","confirm","handleTransactionClick","handleFriendClick","friend","stopPropagation","closePopup","handleEditFriend","generateDeleteCaptcha","num1","Math","floor","random","num2","result","handleDeleteFriend","handleDeleteFormSubmit","parseInt","delete","refreshDeleteCaptcha","handleClearChat","deleteError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","onSubmit","placeholder","value","onChange","target","required","disabled","map","onContextMenu","onDoubleClick","abs","toFixed","title","checked","step","created_at","find","t","f","_c","$RefreshReg$"],"sources":["C:/Users/kchir/Desktop/creadit/src/pages/SplitFriends.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { supabase } from '../utils/supabase'\nimport { Plus, ArrowUp, ArrowDown, Clock, Edit2, Trash2, X, Trash } from 'lucide-react'\n\nconst SplitFriends = () => {\n  const [friends, setFriends] = useState([])\n  const [showAddForm, setShowAddForm] = useState(false)\n  const [selectedFriend, setSelectedFriend] = useState(null)\n  const [transactions, setTransactions] = useState([])\n  const [formData, setFormData] = useState({\n    friendName: '',\n    friendNumber: '',\n    amount: '',\n    type: 'credit',\n    note: ''\n  })\n  const [editingTransaction, setEditingTransaction] = useState(null)\n  const [showPopup, setShowPopup] = useState(null)\n  const [showFriendPopup, setShowFriendPopup] = useState(null)\n  const [editingFriend, setEditingFriend] = useState(null)\n  const [showDeleteForm, setShowDeleteForm] = useState(null)\n  const [deleteFormData, setDeleteFormData] = useState({\n    uniqueNumber: '',\n    captchaInput: ''\n  })\n  const [deleteCaptcha, setDeleteCaptcha] = useState('')\n  const [deleteCaptchaAnswer, setDeleteCaptchaAnswer] = useState(0)\n  const [totalSummary, setTotalSummary] = useState({ totalGiven: 0, totalTaken: 0 })\n\n  useEffect(() => {\n    fetchFriends()\n  }, [])\n\n  useEffect(() => {\n    calculateTotalSummary()\n  }, [friends])\n\n  useEffect(() => {\n    if (selectedFriend) {\n      fetchTransactions(selectedFriend.id)\n    }\n  }, [selectedFriend])\n\n  const fetchFriends = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('friends')\n        .select('*')\n        .order('created_at', { ascending: false })\n\n      if (error) throw error\n      setFriends(data || [])\n    } catch (error) {\n      console.error('Error fetching friends:', error)\n    }\n  }\n\n  const fetchTransactions = async (friendId) => {\n    try {\n      const { data, error } = await supabase\n        .from('transactions')\n        .select('*')\n        .eq('friend_id', friendId)\n        .neq('status', 'deleted')\n        .order('created_at', { ascending: false })\n\n      if (error) throw error\n      setTransactions(data || [])\n    } catch (error) {\n      console.error('Error fetching transactions:', error)\n    }\n  }\n\n  const handleAddFriend = async (e) => {\n    e.preventDefault()\n    try {\n      const { data: { user } } = await supabase.auth.getUser()\n      \n      if (editingFriend) {\n        return handleUpdateFriend(e)\n      }\n\n      const { error } = await supabase\n        .from('friends')\n        .insert([{\n          user_id: user.id,\n          friend_name: formData.friendName,\n          friend_number: formData.friendNumber,\n          balance: 0\n        }])\n\n      if (error) throw error\n      \n      setFormData({ friendName: '', friendNumber: '', amount: '', type: 'credit', note: '' })\n      setEditingFriend(null)\n      setShowAddForm(false)\n      fetchFriends()\n    } catch (error) {\n      console.error('Error adding friend:', error)\n      alert(`Error: ${error.message}`)\n    }\n  }\n\n  const handleTransaction = async (e) => {\n    e.preventDefault()\n    try {\n      const { data: { user } } = await supabase.auth.getUser()\n      const amount = parseFloat(formData.amount)\n      \n      // Calculate new balance\n      const balanceChange = formData.type === 'credit' ? amount : -amount\n      const newBalance = selectedFriend.balance + balanceChange\n\n      if (editingTransaction) {\n        return handleUpdateTransaction(e)\n      }\n\n      // Add transaction with balance at time\n      const { error: transError } = await supabase\n        .from('transactions')\n        .insert([{\n          user_id: user.id,\n          friend_id: selectedFriend.id,\n          amount: amount,\n          type: formData.type,\n          note: formData.note,\n          balance_at_time: newBalance,\n          status: 'active'\n        }])\n\n      if (transError) throw transError\n\n      // Update friend balance\n      const { error: updateError } = await supabase\n        .from('friends')\n        .update({ balance: newBalance })\n        .eq('id', selectedFriend.id)\n\n      if (updateError) throw updateError\n\n      setFormData({ ...formData, amount: '', note: '' })\n      setEditingTransaction(null)\n      fetchFriends()\n      fetchTransactions(selectedFriend.id)\n      \n      // Update selected friend balance\n      setSelectedFriend({ ...selectedFriend, balance: newBalance })\n    } catch (error) {\n      console.error('Error adding transaction:', error)\n      alert(`Error: ${error.message}`)\n    }\n  }\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString()\n  }\n\n  const handleEditTransaction = (transaction) => {\n    setEditingTransaction(transaction)\n    setFormData({\n      ...formData,\n      amount: transaction.amount.toString(),\n      type: transaction.type,\n      note: transaction.note || ''\n    })\n  }\n\n  const handleUpdateTransaction = async (e) => {\n    e.preventDefault()\n    try {\n      const amount = parseFloat(formData.amount)\n      const oldAmount = parseFloat(editingTransaction.amount)\n      const oldType = editingTransaction.type\n      \n      // Calculate balance adjustment\n      const oldChange = oldType === 'credit' ? oldAmount : -oldAmount\n      const newChange = formData.type === 'credit' ? amount : -amount\n      const balanceAdjustment = newChange - oldChange\n      const newBalance = selectedFriend.balance + balanceAdjustment\n\n      // Update transaction with edited status\n      const { error: updateError } = await supabase\n        .from('transactions')\n        .update({\n          amount: amount,\n          type: formData.type,\n          note: formData.note,\n          status: 'edited',\n          balance_at_time: newBalance\n        })\n        .eq('id', editingTransaction.id)\n\n      if (updateError) throw updateError\n\n      // Update friend balance\n      const { error: friendError } = await supabase\n        .from('friends')\n        .update({ balance: newBalance })\n        .eq('id', selectedFriend.id)\n\n      if (friendError) throw friendError\n\n      setFormData({ ...formData, amount: '', note: '' })\n      setEditingTransaction(null)\n      fetchFriends()\n      fetchTransactions(selectedFriend.id)\n      setSelectedFriend({ ...selectedFriend, balance: newBalance })\n    } catch (error) {\n      console.error('Error updating transaction:', error)\n      alert(`Error: ${error.message}`)\n    }\n  }\n\n  const handleDeleteTransaction = async (transaction) => {\n    if (window.confirm('Are you sure you want to delete this transaction?')) {\n      try {\n        // Calculate balance adjustment\n        const oldChange = transaction.type === 'credit' ? parseFloat(transaction.amount) : -parseFloat(transaction.amount)\n        const newBalance = selectedFriend.balance - oldChange\n\n        // Mark transaction as deleted\n        const { error: updateError } = await supabase\n          .from('transactions')\n          .update({ \n            status: 'deleted',\n            balance_at_time: newBalance\n          })\n          .eq('id', transaction.id)\n\n        if (updateError) throw updateError\n\n        // Update friend balance\n        const { error: friendError } = await supabase\n          .from('friends')\n          .update({ balance: newBalance })\n          .eq('id', selectedFriend.id)\n\n        if (friendError) throw friendError\n\n        fetchFriends()\n        fetchTransactions(selectedFriend.id)\n        setSelectedFriend({ ...selectedFriend, balance: newBalance })\n      } catch (error) {\n        console.error('Error deleting transaction:', error)\n        alert(`Error: ${error.message}`)\n      }\n    }\n  }\n\n  const handleTransactionClick = (transaction) => {\n    setShowPopup(transaction.id)\n  }\n\n  const handleFriendClick = (friend, e) => {\n    e.stopPropagation()\n    setShowFriendPopup(friend.id)\n  }\n\n  const closePopup = () => {\n    setShowPopup(null)\n    setShowFriendPopup(null)\n  }\n\n  const handleEditFriend = (friend) => {\n    setEditingFriend(friend)\n    setFormData({\n      ...formData,\n      friendName: friend.friend_name,\n      friendNumber: friend.friend_number\n    })\n    setShowFriendPopup(null)\n  }\n\n  const handleUpdateFriend = async (e) => {\n    e.preventDefault()\n    try {\n      const { error } = await supabase\n        .from('friends')\n        .update({\n          friend_name: formData.friendName\n        })\n        .eq('id', editingFriend.id)\n\n      if (error) throw error\n\n      setFormData({ friendName: '', friendNumber: '', amount: '', type: 'credit', note: '' })\n      setEditingFriend(null)\n      setShowAddForm(false)\n      fetchFriends()\n    } catch (error) {\n      console.error('Error updating friend:', error)\n      alert(`Error: ${error.message}`)\n    }\n  }\n\n  const generateDeleteCaptcha = () => {\n    const num1 = Math.floor(Math.random() * 10) + 1\n    const num2 = Math.floor(Math.random() * 10) + 1\n    const result = num1 + num2\n    setDeleteCaptcha(`${num1} + ${num2} = ?`)\n    setDeleteCaptchaAnswer(result)\n    return result\n  }\n\n  const handleDeleteFriend = (friend) => {\n    setShowDeleteForm(friend)\n    setShowFriendPopup(null)\n    generateDeleteCaptcha()\n    setDeleteFormData({ uniqueNumber: '', captchaInput: '' })\n  }\n\n  const handleDeleteFormSubmit = async (e) => {\n    e.preventDefault()\n    const friend = showDeleteForm\n\n    if (deleteFormData.uniqueNumber !== friend.friend_number) {\n      alert('Incorrect unique number')\n      return\n    }\n\n    if (parseInt(deleteFormData.captchaInput) !== deleteCaptchaAnswer) {\n      alert('Incorrect captcha')\n      generateDeleteCaptcha()\n      setDeleteFormData({ ...deleteFormData, captchaInput: '' })\n      return\n    }\n\n    if (window.confirm(`Are you sure you want to delete ${friend.friend_name} and all related transactions?`)) {\n      try {\n        const { error } = await supabase\n          .from('friends')\n          .delete()\n          .eq('id', friend.id)\n\n        if (error) throw error\n\n        fetchFriends()\n        if (selectedFriend?.id === friend.id) {\n          setSelectedFriend(null)\n        }\n        setShowDeleteForm(null)\n        alert('Friend and all transactions deleted successfully')\n      } catch (error) {\n        console.error('Error deleting friend:', error)\n        alert(`Error: ${error.message}`)\n      }\n    }\n  }\n\n  const refreshDeleteCaptcha = () => {\n    generateDeleteCaptcha()\n    setDeleteFormData({ ...deleteFormData, captchaInput: '' })\n  }\n\n  const handleClearChat = async () => {\n    if (window.confirm(`Are you sure you want to clear all transactions with ${selectedFriend.friend_name}? This will reset the balance to ₹0.`)) {\n      try {\n        // Delete all transactions for this friend\n        const { error: deleteError } = await supabase\n          .from('transactions')\n          .delete()\n          .eq('friend_id', selectedFriend.id)\n\n        if (deleteError) throw deleteError\n\n        // Reset friend balance to 0\n        const { error: updateError } = await supabase\n          .from('friends')\n          .update({ balance: 0 })\n          .eq('id', selectedFriend.id)\n\n        if (updateError) throw updateError\n\n        // Refresh data\n        fetchFriends()\n        fetchTransactions(selectedFriend.id)\n        setSelectedFriend({ ...selectedFriend, balance: 0 })\n        \n        alert('All transactions cleared successfully!')\n      } catch (error) {\n        console.error('Error clearing transactions:', error)\n        alert(`Error: ${error.message}`)\n      }\n    }\n  }\n\n  return (\n    <div className=\"split-friends\">\n      <div className=\"friends-header\">\n        <h1>Split Friends</h1>\n        <button \n          className=\"add-btn\"\n          onClick={() => setShowAddForm(true)}\n        >\n          <Plus size={18} />\n          Add Friend\n        </button>\n      </div>\n\n      {showAddForm && (\n        <div className=\"friend-form\">\n          <h3>{editingFriend ? 'Edit Friend' : 'Add New Friend'}</h3>\n          <form onSubmit={handleAddFriend}>\n            <input\n              type=\"text\"\n              placeholder=\"Friend Name\"\n              value={formData.friendName}\n              onChange={(e) => setFormData({...formData, friendName: e.target.value})}\n              required\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Unique Number\"\n              value={formData.friendNumber}\n              onChange={(e) => setFormData({...formData, friendNumber: e.target.value})}\n              disabled={editingFriend}\n              required\n            />\n            <div className=\"form-actions\">\n              <button type=\"submit\">{editingFriend ? 'Update Friend' : 'Add Friend'}</button>\n              <button type=\"button\" onClick={() => {\n                setShowAddForm(false)\n                setEditingFriend(null)\n                setFormData({ friendName: '', friendNumber: '', amount: '', type: 'credit', note: '' })\n              }}>Cancel</button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      <div className=\"friends-list\">\n        {friends.map((friend) => (\n          <div \n            key={friend.id} \n            className={`friend-card ${selectedFriend?.id === friend.id ? 'selected' : ''}`}\n            onClick={() => setSelectedFriend(friend)}\n            onContextMenu={(e) => handleFriendClick(friend, e)}\n            onDoubleClick={(e) => handleFriendClick(friend, e)}\n          >\n            <div className=\"friend-info\">\n              <h4>{friend.friend_name}</h4>\n              <p>#{friend.friend_number}</p>\n            </div>\n            <div className={`friend-balance ${friend.balance >= 0 ? 'positive' : 'negative'}`}>\n              ₹{Math.abs(friend.balance).toFixed(2)}\n              {friend.balance >= 0 ? ' (To take)' : ' (To give)'}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {selectedFriend && (\n        <div className=\"transaction-section\">\n          <div className=\"transaction-header\">\n            <h3>Transactions with {selectedFriend.friend_name}</h3>\n            <button \n              className=\"clear-chat-btn\"\n              onClick={() => handleClearChat()}\n              title=\"Clear all transactions\"\n            >\n              <Trash size={16} />\n              Clear Chat\n            </button>\n          </div>\n          \n          <div className=\"transaction-form\">\n            <form onSubmit={handleTransaction}>\n              <div className=\"transaction-type\">\n                <label>\n                  <input\n                    type=\"radio\"\n                    value=\"debit\"\n                    checked={formData.type === 'debit'}\n                    onChange={(e) => setFormData({...formData, type: e.target.value})}\n                  />\n                  Taken (Friend paid for you)\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    value=\"credit\"\n                    checked={formData.type === 'credit'}\n                    onChange={(e) => setFormData({...formData, type: e.target.value})}\n                  />\n                  Given (You paid for friend)\n                </label>\n              </div>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                placeholder=\"Amount (₹)\"\n                value={formData.amount}\n                onChange={(e) => setFormData({...formData, amount: e.target.value})}\n                required\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Note (optional)\"\n                value={formData.note}\n                onChange={(e) => setFormData({...formData, note: e.target.value})}\n              />\n              <button type=\"submit\">\n                {editingTransaction ? 'Update Transaction' : 'Add Transaction'}\n              </button>\n              {editingTransaction && (\n                <button type=\"button\" onClick={() => {\n                  setEditingTransaction(null)\n                  setFormData({ ...formData, amount: '', note: '' })\n                }}>\n                  Cancel Edit\n                </button>\n              )}\n            </form>\n          </div>\n\n          <div className=\"transactions-list\">\n            {transactions.map((transaction) => (\n              <div key={transaction.id} className=\"transaction-row\">\n                {transaction.type === 'debit' ? (\n                  <>\n                    <div \n                      className=\"transaction-item taken-item\"\n                      onClick={() => handleTransactionClick(transaction)}\n                    >\n                      <div className=\"transaction-amount\">\n                        <ArrowDown className=\"taken-icon\" />\n                        ₹{transaction.amount.toFixed(2)}\n                      </div>\n                      <div className=\"transaction-details\">\n                        <p className=\"transaction-note\">{transaction.note || 'No note'}</p>\n                        <p className=\"transaction-time\">\n                          <Clock size={14} />\n                          {formatDate(transaction.created_at)}\n                        </p>\n                      </div>\n                      <div className=\"transaction-total\">\n                        ₹{Math.abs(transaction.balance_at_time || 0).toFixed(2)} {(transaction.balance_at_time || 0) >= 0 ? '(To take)' : '(To give)'}\n                      </div>\n                      {transaction.status !== 'active' && (\n                        <div className=\"transaction-status\">\n                          {transaction.status === 'edited' ? 'Edited' : 'Deleted'}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"transaction-spacer\"></div>\n                    <div className=\"transaction-empty\"></div>\n                  </>\n                ) : (\n                  <>\n                    <div className=\"transaction-empty\"></div>\n                    <div className=\"transaction-spacer\"></div>\n                    <div \n                      className=\"transaction-item given-item\"\n                      onClick={() => handleTransactionClick(transaction)}\n                    >\n                      <div className=\"transaction-amount\">\n                        <ArrowUp className=\"given-icon\" />\n                        ₹{transaction.amount.toFixed(2)}\n                      </div>\n                      <div className=\"transaction-details\">\n                        <p className=\"transaction-note\">{transaction.note || 'No note'}</p>\n                        <p className=\"transaction-time\">\n                          <Clock size={14} />\n                          {formatDate(transaction.created_at)}\n                        </p>\n                      </div>\n                      <div className=\"transaction-total\">\n                        ₹{Math.abs(transaction.balance_at_time || 0).toFixed(2)} {(transaction.balance_at_time || 0) >= 0 ? '(To take)' : '(To give)'}\n                      </div>\n                      {transaction.status !== 'active' && (\n                        <div className=\"transaction-status\">\n                          {transaction.status === 'edited' ? 'Edited' : 'Deleted'}\n                        </div>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            ))}\n          </div>\n\n          {/* Transaction Popup Menu */}\n          {showPopup && (\n            <div className=\"popup-overlay\" onClick={closePopup}>\n              <div className=\"popup-menu\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"popup-header\">\n                  <h4>Transaction Options</h4>\n                  <button className=\"popup-close\" onClick={closePopup}>\n                    <X size={16} />\n                  </button>\n                </div>\n                <div className=\"popup-actions\">\n                  <button \n                    className=\"popup-edit\"\n                    onClick={() => {\n                      const transaction = transactions.find(t => t.id === showPopup)\n                      handleEditTransaction(transaction)\n                      closePopup()\n                    }}\n                  >\n                    <Edit2 size={16} />\n                    Edit Transaction\n                  </button>\n                  <button \n                    className=\"popup-delete\"\n                    onClick={() => {\n                      const transaction = transactions.find(t => t.id === showPopup)\n                      handleDeleteTransaction(transaction)\n                      closePopup()\n                    }}\n                  >\n                    <Trash2 size={16} />\n                    Delete Transaction\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Friend Popup Menu */}\n          {showFriendPopup && (\n            <div className=\"popup-overlay\" onClick={closePopup}>\n              <div className=\"popup-menu\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"popup-header\">\n                  <h4>Friend Options</h4>\n                  <button className=\"popup-close\" onClick={closePopup}>\n                    <X size={16} />\n                  </button>\n                </div>\n                <div className=\"popup-actions\">\n                  <button \n                    className=\"popup-edit\"\n                    onClick={() => {\n                      const friend = friends.find(f => f.id === showFriendPopup)\n                      handleEditFriend(friend)\n                      setShowAddForm(true)\n                    }}\n                  >\n                    <Edit2 size={16} />\n                    Edit Friend\n                  </button>\n                  <button \n                    className=\"popup-delete\"\n                    onClick={() => {\n                      const friend = friends.find(f => f.id === showFriendPopup)\n                      handleDeleteFriend(friend)\n                    }}\n                  >\n                    <Trash2 size={16} />\n                    Delete Friend\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Delete Friend Form */}\n          {showDeleteForm && (\n            <div className=\"popup-overlay\" onClick={() => setShowDeleteForm(null)}>\n              <div className=\"delete-form\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"popup-header\">\n                  <h4>Delete Friend: {showDeleteForm.friend_name}</h4>\n                  <button className=\"popup-close\" onClick={() => setShowDeleteForm(null)}>\n                    <X size={16} />\n                  </button>\n                </div>\n                <form onSubmit={handleDeleteFormSubmit}>\n                  <div className=\"delete-warning\">\n                    ⚠️ This will permanently delete the friend and ALL transactions!\n                  </div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter friend's unique number\"\n                    value={deleteFormData.uniqueNumber}\n                    onChange={(e) => setDeleteFormData({...deleteFormData, uniqueNumber: e.target.value})}\n                    required\n                  />\n                  <div className=\"captcha-container\">\n                    <div className=\"captcha-display\">\n                      <span>{deleteCaptcha}</span>\n                      <button type=\"button\" onClick={refreshDeleteCaptcha} className=\"refresh-btn\">\n                        ↻\n                      </button>\n                    </div>\n                    <input\n                      type=\"number\"\n                      placeholder=\"Enter answer\"\n                      value={deleteFormData.captchaInput}\n                      onChange={(e) => setDeleteFormData({...deleteFormData, captchaInput: e.target.value})}\n                      required\n                    />\n                  </div>\n                  <div className=\"delete-actions\">\n                    <button type=\"submit\" className=\"delete-confirm-btn\">\n                      Delete Friend\n                    </button>\n                    <button type=\"button\" onClick={() => setShowDeleteForm(null)}>\n                      Cancel\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default SplitFriends"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}