{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kchir\\\\Desktop\\\\creadit\\\\src\\\\components\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../utils/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = ({\n  isLogin: initialIsLogin = true,\n  setShowAuth\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(initialIsLogin);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [captchaInput, setCaptchaInput] = useState('');\n  const [captchaValue, setCaptchaValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const generateCaptcha = () => {\n    const num1 = Math.floor(Math.random() * 10) + 1;\n    const num2 = Math.floor(Math.random() * 10) + 1;\n    const result = num1 + num2;\n    setCaptchaValue(`${num1} + ${num2} = ?`);\n    return result;\n  };\n  const [captchaAnswer, setCaptchaAnswer] = useState(() => generateCaptcha());\n  const refreshCaptcha = () => {\n    setCaptchaAnswer(generateCaptcha());\n    setCaptchaInput('');\n  };\n  const handleAuth = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    if (!validateEmail(email)) {\n      setMessage('Please enter a valid email address');\n      setLoading(false);\n      return;\n    }\n    if (!isLogin) {\n      if (password !== confirmPassword) {\n        setMessage('Passwords do not match');\n        setLoading(false);\n        return;\n      }\n      if (parseInt(captchaInput) !== captchaAnswer) {\n        setMessage('Incorrect captcha. Please try again.');\n        refreshCaptcha();\n        setLoading(false);\n        return;\n      }\n    }\n    try {\n      if (isLogin) {\n        const {\n          error\n        } = await supabase.auth.signInWithPassword({\n          email,\n          password\n        });\n        if (error) throw error;\n      } else {\n        const {\n          error\n        } = await supabase.auth.signUp({\n          email,\n          password,\n          options: {\n            emailRedirectTo: window.location.origin\n          }\n        });\n        if (error) throw error;\n        setMessage('Registration successful! Please check your email to verify your account.');\n      }\n    } catch (error) {\n      setMessage(error.message);\n      if (!isLogin) refreshCaptcha();\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAuth,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email (example@domain.com)\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password (min 6 characters)\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          minLength: 6,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          minLength: 6,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captcha-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"captcha-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: captchaValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: refreshCaptcha,\n              className: \"refresh-btn\",\n              children: \"\\u21BB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Enter answer\",\n            value: captchaInput,\n            onChange: e => setCaptchaInput(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Loading...' : isLogin ? 'Login' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [isLogin ? \"Don't have an account? \" : \"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"link-btn\",\n          onClick: () => {\n            setIsLogin(!isLogin);\n            setMessage('');\n            setConfirmPassword('');\n            setCaptchaInput('');\n            refreshCaptcha();\n          },\n          children: isLogin ? 'Register' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), setShowAuth && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"link-btn\",\n          onClick: () => setShowAuth(false),\n          children: \"\\u2190 Back to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"yaMoBfq+nkSvZ4UB7l0b3OPSUnE=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","Auth","isLogin","initialIsLogin","setShowAuth","_s","setIsLogin","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","captchaInput","setCaptchaInput","captchaValue","setCaptchaValue","loading","setLoading","message","setMessage","validateEmail","emailRegex","test","generateCaptcha","num1","Math","floor","random","num2","result","captchaAnswer","setCaptchaAnswer","refreshCaptcha","handleAuth","e","preventDefault","parseInt","error","auth","signInWithPassword","signUp","options","emailRedirectTo","window","location","origin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","minLength","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kchir/Desktop/creadit/src/components/Auth.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { supabase } from '../utils/supabase'\n\nconst Auth = ({ isLogin: initialIsLogin = true, setShowAuth }) => {\n  const [isLogin, setIsLogin] = useState(initialIsLogin)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [captchaInput, setCaptchaInput] = useState('')\n  const [captchaValue, setCaptchaValue] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [message, setMessage] = useState('')\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    return emailRegex.test(email)\n  }\n\n  const generateCaptcha = () => {\n    const num1 = Math.floor(Math.random() * 10) + 1\n    const num2 = Math.floor(Math.random() * 10) + 1\n    const result = num1 + num2\n    setCaptchaValue(`${num1} + ${num2} = ?`)\n    return result\n  }\n\n  const [captchaAnswer, setCaptchaAnswer] = useState(() => generateCaptcha())\n\n  const refreshCaptcha = () => {\n    setCaptchaAnswer(generateCaptcha())\n    setCaptchaInput('')\n  }\n\n  const handleAuth = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n    setMessage('')\n\n    if (!validateEmail(email)) {\n      setMessage('Please enter a valid email address')\n      setLoading(false)\n      return\n    }\n\n    if (!isLogin) {\n      if (password !== confirmPassword) {\n        setMessage('Passwords do not match')\n        setLoading(false)\n        return\n      }\n\n      if (parseInt(captchaInput) !== captchaAnswer) {\n        setMessage('Incorrect captcha. Please try again.')\n        refreshCaptcha()\n        setLoading(false)\n        return\n      }\n    }\n\n    try {\n      if (isLogin) {\n        const { error } = await supabase.auth.signInWithPassword({ email, password })\n        if (error) throw error\n      } else {\n        const { error } = await supabase.auth.signUp({ \n          email, \n          password,\n          options: {\n            emailRedirectTo: window.location.origin\n          }\n        })\n        if (error) throw error\n        setMessage('Registration successful! Please check your email to verify your account.')\n      }\n    } catch (error) {\n      setMessage(error.message)\n      if (!isLogin) refreshCaptcha()\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-card\">\n        <h2>{isLogin ? 'Login' : 'Register'}</h2>\n        \n        <form onSubmit={handleAuth}>\n          <input\n            type=\"email\"\n            placeholder=\"Email (example@domain.com)\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password (min 6 characters)\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            minLength={6}\n            required\n          />\n          {!isLogin && (\n            <input\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              minLength={6}\n              required\n            />\n          )}\n          {!isLogin && (\n            <div className=\"captcha-container\">\n              <div className=\"captcha-display\">\n                <span>{captchaValue}</span>\n                <button type=\"button\" onClick={refreshCaptcha} className=\"refresh-btn\">\n                  ↻\n                </button>\n              </div>\n              <input\n                type=\"number\"\n                placeholder=\"Enter answer\"\n                value={captchaInput}\n                onChange={(e) => setCaptchaInput(e.target.value)}\n                required\n              />\n            </div>\n          )}\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Loading...' : (isLogin ? 'Login' : 'Register')}\n          </button>\n        </form>\n        \n        {message && <p className=\"message\">{message}</p>}\n        \n        <p>\n          {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\n          <button \n            type=\"button\" \n            className=\"link-btn\"\n            onClick={() => {\n              setIsLogin(!isLogin)\n              setMessage('')\n              setConfirmPassword('')\n              setCaptchaInput('')\n              refreshCaptcha()\n            }}\n          >\n            {isLogin ? 'Register' : 'Login'}\n          </button>\n        </p>\n        {setShowAuth && (\n          <p>\n            <button \n              type=\"button\" \n              className=\"link-btn\"\n              onClick={() => setShowAuth(false)}\n            >\n              ← Back to Home\n            </button>\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Auth"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}